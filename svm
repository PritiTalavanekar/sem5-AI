import sklearn
from sklearn import datasets
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn import svm, metrics

# Load dataset
cancer = datasets.load_breast_cancer()

# Print feature names
print("Features:", cancer.feature_names)

# Print target labels
print("Labels:", cancer.target_names)

# Print data shape
print("Data shape:", cancer.data.shape)

# Print top 5 feature rows
print(cancer.data[0:5])

# Print target labels (0 = malignant, 1 = benign)
print(cancer.target)

# Split dataset into training and testing sets
x_train, x_test, y_train, y_test = train_test_split(
    cancer.data, cancer.target, test_size=0.3, random_state=109
)

# Create an SVM classifier (RBF kernel)
clf = svm.SVC(kernel='rbf')

# Train the model using the training sets
clf.fit(x_train, y_train)

# Predict the response for test dataset
y_pred = clf.predict(x_test)

# Display predictions
print("Predicted labels:", y_pred)

# Calculate and print accuracy
print("Accuracy:", metrics.accuracy_score(y_test, y_pred))

# Plotting test data
plt.scatter(x_test[:, 0], x_test[:, 1], c='blue', alpha=0.4)
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.title('Test Data')
plt.show()

# Plotting trained data
plt.scatter(x_train[:, 0], x_train[:, 1], c=y_train, cmap='coolwarm', alpha=0.6)
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.title('Train Data')
plt.show()
